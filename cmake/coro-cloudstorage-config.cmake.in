@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

if(NOT TARGET duktape::duktape)
    if(@duktape_FOUND@)
        find_dependency(duktape 2.4.0 CONFIG REQUIRED)
        add_library(duktape::duktape INTERFACE IMPORTED)
        target_include_directories(duktape::duktape INTERFACE ${DUKTAPE_INCLUDE_DIRS})
        target_link_libraries(duktape::duktape INTERFACE ${DUKTAPE_LIBRARIES})
    else()
        find_dependency(PkgConfig REQUIRED)
        pkg_check_modules(PkgConfigDuktape REQUIRED duktape>=2.4.0 IMPORTED_TARGET)
        add_library(duktape::duktape ALIAS PkgConfig::PkgConfigDuktape)
    endif()
endif()
find_dependency(coro-http REQUIRED)
find_dependency(nlohmann_json 3.9.1 REQUIRED)
find_dependency(fmt 8.0.0 REQUIRED)
find_dependency(pugixml 1.11 REQUIRED)
find_dependency(Libevent 2.1.12 REQUIRED)
find_dependency(SqliteOrm 1.8.0 REQUIRED)

if(@FFMPEG_FOUND@)
    find_dependency(FFMPEG 4.4 REQUIRED)
    foreach(TARGET IN ITEMS avcodec avformat avutil avfilter swscale swresample)
        if(NOT TARGET FFMPEG::${TARGET})
            add_library(FFMPEG::${TARGET} INTERFACE IMPORTED)
            target_include_directories(FFMPEG::${TARGET} INTERFACE ${FFMPEG_INCLUDE_DIRS})
            target_link_directories(FFMPEG::${TARGET} INTERFACE ${FFMPEG_LIBRARY_DIRS})
            target_link_libraries(FFMPEG::${TARGET} INTERFACE ${FFMPEG_LIBRARIES})
        endif()
    endforeach()
else()
    find_dependency(PkgConfig REQUIRED)
    pkg_check_modules(avcodec REQUIRED libavcodec>=58.134.100 IMPORTED_TARGET)
    pkg_check_modules(avformat REQUIRED libavformat>=58.76.100 IMPORTED_TARGET)
    pkg_check_modules(avutil REQUIRED libavutil>=56.70.100 IMPORTED_TARGET)
    pkg_check_modules(avfilter REQUIRED libavfilter>=7.110.100 IMPORTED_TARGET)
    pkg_check_modules(swscale REQUIRED libswscale>=5.9.100 IMPORTED_TARGET)
    pkg_check_modules(swresample REQUIRED libswresample>=3.9.100 IMPORTED_TARGET)
    foreach(TARGET IN ITEMS avcodec avformat avutil avfilter swscale swresample)
        if(NOT TARGET FFMPEG::${TARGET})
            add_library(FFMPEG::${TARGET} ALIAS PkgConfig::${TARGET})
        endif()
    endforeach()
endif()

if(@cryptopp_FOUND@)
    find_dependency(cryptopp REQUIRED)
elseif(NOT TARGET cryptopp::cryptopp)
    find_path(CRYPTOPP_INCLUDE cryptopp/config.h REQUIRED)
    find_library(CRYPTOPP_LIBRARY cryptopp cryptopp-static REQUIRED)
    add_library(cryptopp::cryptopp INTERFACE IMPORTED)
    target_include_directories(cryptopp::cryptopp INTERFACE ${CRYPTOPP_INCLUDE})
    target_link_libraries(cryptopp::cryptopp INTERFACE ${CRYPTOPP_LIBRARY})
endif()

if(@cppwinrt_FOUND@)
    find_dependency(cppwinrt CONFIG REQUIRED)
endif()

include("${CMAKE_CURRENT_LIST_DIR}/coro-cloudstorage.cmake")
check_required_components("@PROJECT_NAME@")