@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

find_dependency(coro-http REQUIRED)
find_dependency(nlohmann_json 3.9.1 REQUIRED)
find_dependency(fmt 8.0.0 REQUIRED)
find_dependency(pugixml 1.11 REQUIRED)
find_dependency(Libevent 2.1.12 REQUIRED)
find_dependency(SqliteOrm 1.8.0 REQUIRED)

if(@FFMPEG_FOUND@)
    find_dependency(FFMPEG 4.4 REQUIRED)
else()
    find_dependency(PkgConfig REQUIRED)
    pkg_check_modules(avcodec REQUIRED libavcodec>=58.134.100 IMPORTED_TARGET)
    pkg_check_modules(avformat REQUIRED libavformat>=58.76.100 IMPORTED_TARGET)
    pkg_check_modules(avutil REQUIRED libavutil>=56.70.100 IMPORTED_TARGET)
    pkg_check_modules(avfilter REQUIRED libavfilter>=7.110.100 IMPORTED_TARGET)
    pkg_check_modules(swscale REQUIRED libswscale>=5.9.100 IMPORTED_TARGET)
    pkg_check_modules(swresample REQUIRED libswresample>=3.9.100 IMPORTED_TARGET)
    if(NOT TARGET FFMPEG::avcodec)
        add_library(FFMPEG::avcodec ALIAS PkgConfig::avcodec)
    endif()
    if(NOT TARGET FFMPEG::avformat)
        add_library(FFMPEG::avformat ALIAS PkgConfig::avformat)
    endif()
    if(NOT TARGET FFMPEG::avutil)
        add_library(FFMPEG::avutil ALIAS PkgConfig::avutil)
    endif()
    if(NOT TARGET FFMPEG::avfilter)
        add_library(FFMPEG::avfilter ALIAS PkgConfig::avfilter)
    endif()
    if(NOT TARGET FFMPEG::swscale)
        add_library(FFMPEG::swscale ALIAS PkgConfig::swscale)
    endif()
    if(NOT TARGET FFMPEG::swresample)
        add_library(FFMPEG::swresample ALIAS PkgConfig::swresample)
    endif()
endif()

if(@cryptopp_FOUND@)
    find_dependency(cryptopp REQUIRED)
elseif(NOT TARGET cryptopp::cryptopp)
    find_path(CRYPTOPP_INCLUDE cryptopp/config.h REQUIRED)
    find_library(CRYPTOPP_LIBRARY cryptopp cryptopp-static REQUIRED)
    add_library(cryptopp::cryptopp UNKNOWN IMPORTED)
    set_target_properties(cryptopp::cryptopp
        PROPERTIES
            IMPORTED_LOCATION "${CRYPTOPP_LIBRARY}"
            INTERFACE_INCLUDE_DIRECTORIES "${CRYPTOPP_INCLUDE}"
    )
endif()

if(@cppwinrt_FOUND@)
    find_dependency(cppwinrt CONFIG REQUIRED)
endif()

include("${CMAKE_CURRENT_LIST_DIR}/coro-cloudstorage.cmake")
check_required_components("@PROJECT_NAME@")